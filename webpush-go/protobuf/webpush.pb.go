// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/webpush.proto

package webpush101

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WebpushRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebpushRequest) Reset()         { *m = WebpushRequest{} }
func (m *WebpushRequest) String() string { return proto.CompactTextString(m) }
func (*WebpushRequest) ProtoMessage()    {}
func (*WebpushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_webpush_ef3b694ef44cf98a, []int{0}
}
func (m *WebpushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebpushRequest.Unmarshal(m, b)
}
func (m *WebpushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebpushRequest.Marshal(b, m, deterministic)
}
func (dst *WebpushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebpushRequest.Merge(dst, src)
}
func (m *WebpushRequest) XXX_Size() int {
	return xxx_messageInfo_WebpushRequest.Size(m)
}
func (m *WebpushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebpushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebpushRequest proto.InternalMessageInfo

type UserNotification struct {
	User                 []*User         `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	Request              *WebpushRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserNotification) Reset()         { *m = UserNotification{} }
func (m *UserNotification) String() string { return proto.CompactTextString(m) }
func (*UserNotification) ProtoMessage()    {}
func (*UserNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_webpush_ef3b694ef44cf98a, []int{1}
}
func (m *UserNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserNotification.Unmarshal(m, b)
}
func (m *UserNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserNotification.Marshal(b, m, deterministic)
}
func (dst *UserNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserNotification.Merge(dst, src)
}
func (m *UserNotification) XXX_Size() int {
	return xxx_messageInfo_UserNotification.Size(m)
}
func (m *UserNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_UserNotification.DiscardUnknown(m)
}

var xxx_messageInfo_UserNotification proto.InternalMessageInfo

func (m *UserNotification) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserNotification) GetRequest() *WebpushRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type UserSubscriptionNotification struct {
	Subscription         []*UserSubscription `protobuf:"bytes,1,rep,name=subscription,proto3" json:"subscription,omitempty"`
	Request              *WebpushRequest     `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UserSubscriptionNotification) Reset()         { *m = UserSubscriptionNotification{} }
func (m *UserSubscriptionNotification) String() string { return proto.CompactTextString(m) }
func (*UserSubscriptionNotification) ProtoMessage()    {}
func (*UserSubscriptionNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_webpush_ef3b694ef44cf98a, []int{2}
}
func (m *UserSubscriptionNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSubscriptionNotification.Unmarshal(m, b)
}
func (m *UserSubscriptionNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSubscriptionNotification.Marshal(b, m, deterministic)
}
func (dst *UserSubscriptionNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSubscriptionNotification.Merge(dst, src)
}
func (m *UserSubscriptionNotification) XXX_Size() int {
	return xxx_messageInfo_UserSubscriptionNotification.Size(m)
}
func (m *UserSubscriptionNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSubscriptionNotification.DiscardUnknown(m)
}

var xxx_messageInfo_UserSubscriptionNotification proto.InternalMessageInfo

func (m *UserSubscriptionNotification) GetSubscription() []*UserSubscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *UserSubscriptionNotification) GetRequest() *WebpushRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*WebpushRequest)(nil), "WebpushRequest")
	proto.RegisterType((*UserNotification)(nil), "UserNotification")
	proto.RegisterType((*UserSubscriptionNotification)(nil), "UserSubscriptionNotification")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebpushServiceClient is the client API for WebpushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebpushServiceClient interface {
	SendUserNotification(ctx context.Context, in *UserNotification, opts ...grpc.CallOption) (*empty.Empty, error)
	SendUserSubscriptionNotification(ctx context.Context, in *UserSubscriptionNotification, opts ...grpc.CallOption) (*empty.Empty, error)
}

type webpushServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebpushServiceClient(cc *grpc.ClientConn) WebpushServiceClient {
	return &webpushServiceClient{cc}
}

func (c *webpushServiceClient) SendUserNotification(ctx context.Context, in *UserNotification, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/WebpushService/SendUserNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webpushServiceClient) SendUserSubscriptionNotification(ctx context.Context, in *UserSubscriptionNotification, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/WebpushService/SendUserSubscriptionNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebpushServiceServer is the server API for WebpushService service.
type WebpushServiceServer interface {
	SendUserNotification(context.Context, *UserNotification) (*empty.Empty, error)
	SendUserSubscriptionNotification(context.Context, *UserSubscriptionNotification) (*empty.Empty, error)
}

func RegisterWebpushServiceServer(s *grpc.Server, srv WebpushServiceServer) {
	s.RegisterService(&_WebpushService_serviceDesc, srv)
}

func _WebpushService_SendUserNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebpushServiceServer).SendUserNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WebpushService/SendUserNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebpushServiceServer).SendUserNotification(ctx, req.(*UserNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebpushService_SendUserSubscriptionNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSubscriptionNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebpushServiceServer).SendUserSubscriptionNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WebpushService/SendUserSubscriptionNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebpushServiceServer).SendUserSubscriptionNotification(ctx, req.(*UserSubscriptionNotification))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebpushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WebpushService",
	HandlerType: (*WebpushServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendUserNotification",
			Handler:    _WebpushService_SendUserNotification_Handler,
		},
		{
			MethodName: "SendUserSubscriptionNotification",
			Handler:    _WebpushService_SendUserSubscriptionNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/webpush.proto",
}

func init() { proto.RegisterFile("protobuf/webpush.proto", fileDescriptor_webpush_ef3b694ef44cf98a) }

var fileDescriptor_webpush_ef3b694ef44cf98a = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0x4f, 0x4d, 0x2a, 0x28, 0x2d, 0xce, 0xd0, 0x03, 0x0b, 0x48,
	0x49, 0xa7, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0xc3, 0xa5, 0x53, 0x73, 0x0b, 0x4a, 0x2a, 0xa1,
	0x92, 0x0a, 0x70, 0x51, 0x90, 0x8e, 0xf8, 0xe2, 0xd2, 0xa4, 0xe2, 0xe4, 0xa2, 0xcc, 0x82, 0x92,
	0xcc, 0xfc, 0x3c, 0xa8, 0x0a, 0x61, 0xb8, 0x8a, 0xd2, 0xe2, 0xd4, 0x22, 0x88, 0xa0, 0x92, 0x00,
	0x17, 0x5f, 0x38, 0xc4, 0x92, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xa5, 0x08, 0x2e, 0x81,
	0xd0, 0xe2, 0xd4, 0x22, 0xbf, 0xfc, 0x92, 0xcc, 0xb4, 0xcc, 0xe4, 0x44, 0x90, 0x01, 0x42, 0x92,
	0x5c, 0x2c, 0x20, 0x3d, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0xac, 0x7a, 0x20, 0x05, 0x41,
	0x60, 0x21, 0x21, 0x4d, 0x2e, 0xf6, 0x22, 0x88, 0x4e, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x7e, 0x3d, 0x54, 0x03, 0x83, 0x60, 0xf2, 0x4a, 0x0d, 0x8c, 0x5c, 0x32, 0x20, 0x9d, 0xc1, 0x48,
	0x6e, 0x43, 0xb1, 0xc6, 0x94, 0x8b, 0x07, 0xd9, 0xdd, 0x50, 0xeb, 0x04, 0xf5, 0xd0, 0x35, 0x05,
	0xa1, 0x28, 0x23, 0xc1, 0x09, 0x46, 0xeb, 0x18, 0xe1, 0xfe, 0x0d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c,
	0x4e, 0x15, 0x72, 0xe4, 0x12, 0x09, 0x4e, 0xcd, 0x4b, 0xc1, 0xf0, 0x33, 0xc4, 0x5a, 0x64, 0x21,
	0x29, 0x31, 0x3d, 0x48, 0x0c, 0xe8, 0xc1, 0x42, 0x52, 0xcf, 0x15, 0x14, 0x03, 0x42, 0x91, 0x5c,
	0x0a, 0x30, 0x23, 0x70, 0xfa, 0x4d, 0x56, 0x0f, 0x9f, 0x34, 0x2e, 0xa3, 0x9d, 0x78, 0xa2, 0xb8,
	0xa0, 0x89, 0xc0, 0xd0, 0xc0, 0x30, 0x89, 0x0d, 0x2c, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x65, 0xff, 0x32, 0xa9, 0x22, 0x02, 0x00, 0x00,
}
